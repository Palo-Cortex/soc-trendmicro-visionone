action: ALERTS
alert_category: OTHER
alert_description: $alert_description
alert_domain: DOMAIN_SECURITY
alert_fields:
  action_file_path: filepath
  action_file_sha256: sha256
  action_local_ip: local_ip
  action_remote_ip: remote_ip_str
  actor_effective_username: user_name
  actor_process_command_line: cmdline
  actor_process_image_name: filename
  actor_process_image_path: filepath
  actor_process_image_sha256: sha256
  additionalindicators: ioc_value
  agent_device_domain: domain
  agent_hostname: v1_host_name
  agent_id: v1_host_guid
  eventaction: alert_provider
  eventid: id
  external_pivot_url: workbench_link
  externallink: workbench_link
  externalstatus: status
  filehash: sha256
  mac: mac_address
  mitretechniqueid: mitre_ids_str
  parentprocessname: parent_process_name
  parentprocesspath: parent_process_path
  prenatsourceip: v1_host_ip
  processcmd: cmdline
  processmd5: md5
  riskscore: score
  severity: severity_name
  tim_main_indicator: ioc_value
  trendmicrovisiononexdrindicators: indicators_json
  trendmicrovisiononexdrindicatorsjson: indicators_json
  trendmicrovisiononexdrinvestigationstatus: investigation_status
  userid: user_principal
  usersid: user_id
alert_name: Trend Micro - $alert_name
alert_type:
crontab:
dataset: alerts
description:
drilldown_query_timeframe: ALERT
execution_mode: REAL_TIME
global_rule_id: SOC Trend Micro Vision One V3 Alerts - Impact (TA0040)
investigation_query_link: ''
is_enabled: true
lookup_mapping: []
mapping_strategy: CUSTOM
mitre_defs:
  TA0040 - Impact: []
name: SOC Trend Micro Vision One V3 Alerts - Impact (TA0040)
rule_id: 0
search_window:
severity: User Defined
simple_schedule:
suppression_duration:
suppression_enabled: false
suppression_fields:
timezone:
user_defined_category:
user_defined_severity: severity
xql_query: "dataset = trend_micro_vision_one_v3_generic_alert_raw\n| filter alert_provider
  = \"SAE\"\n\n| alter j = _alert_data -> raw_json\n\n/* ===== MITRE: TA0040 Impact
  (reliable filter via raw string) ===== */\n| alter mitre_raw_str = to_string(j ->
  matched_rules[])\n| filter\n    mitre_raw_str contains \"T1531\"   /* Account Access
  Removal */\n or mitre_raw_str contains \"T1485\"   /* Data Destruction */\n or mitre_raw_str
  contains \"T1486\"   /* Data Encrypted for Impact */\n or mitre_raw_str contains
  \"T1565\"   /* Data Manipulation */\n or mitre_raw_str contains \"T1491\"   /* Defacement
  */\n or mitre_raw_str contains \"T1561\"   /* Disk Wipe */\n or mitre_raw_str contains
  \"T1667\"   /* Email Bombing */\n or mitre_raw_str contains \"T1499\"   /* Endpoint
  DoS */\n or mitre_raw_str contains \"T1489\"   /* Service Stop */\n or mitre_raw_str
  contains \"T1498\"   /* Network DoS */\n or mitre_raw_str contains \"T1657\"   /*
  Financial Theft */\n or mitre_raw_str contains \"T1495\"   /* Firmware Corruption
  */\n or mitre_raw_str contains \"T1490\"   /* Inhibit System Recovery */\n or mitre_raw_str
  contains \"T1496\"   /* Resource Hijacking */\n or mitre_raw_str contains \"T1529\"\
  \   /* System Shutdown/Reboot */\n\n/* Emit a constant tactic label for layouts/mapping
  */\n| alter mitre_tactic = \"TA0040 - Impact\"\n\n/* ===== CLEAN MITRE FIELDS (dual-path
  extractor) ===== */\n| alter mfilters_flat   = j -> matched_rules.matched_filters[],\n\
  \        mrules_nested   = j -> matched_rules[]\n\n| alter mitre_ids_arr_a =\n \
  \     arraymap(mfilters_flat, json_extract_scalar(\"@element\",\"$.mitre_technique_ids[0]\"\
  ))\n\n| alter mitre_ids_arr_b =\n      arraymap(mrules_nested, json_extract_scalar(\"\
  @element\",\"$.matched_filters[0].mitre_technique_ids[0]\"))\n\n| alter mitre_ids_arr
  =\n      if(array_length(mitre_ids_arr_a) > 0, mitre_ids_arr_a, mitre_ids_arr_b)\n
  \n| alter mitre_ids_short_arr =\n      arraymap(mitre_ids_arr, replace(\"@element\"\
  , \"\\\\.\\\\d+$\", \"\"))\n\n| alter\n  mitre_ids_str =\n    if(array_length(mitre_ids_arr)
  > 0, replace(arraystring(mitre_ids_arr, \", \"), \"\\\"\",\"\"), \"—\"),\n  mitre_ids_short_str
  =\n    if(array_length(mitre_ids_short_arr) > 0, replace(arraystring(mitre_ids_short_arr,
  \", \"), \"\\\"\",\"\"), \"—\"),\n  mitre_primary       = arrayindex(mitre_ids_arr,
  0),\n  mitre_primary_short = arrayindex(mitre_ids_short_arr, 0),\n  mitre_count\
  \         = array_length(mitre_ids_arr)\n\n/* -------- Core V1 metadata --------
  */\n| alter\n  id                    = j -> id,\n  schema_version        = j ->
  schema_version,\n  status                = j -> status,\n  investigation_status\
  \  = j -> investigation_status,\n  investigation_result  = j -> investigation_result,\n\
  \  workbench_link        = j -> workbench_link,\n  alert_provider        = j ->
  alert_provider,\n  alert_name            = j -> model,\n  model_type           \
  \ = j -> model_type,\n  score                 = to_integer(j -> score),\n  severity\
  \              = j -> severity,\n  created_date_time_raw = j -> created_date_time,\n\
  \  updated_date_time_raw = j -> updated_date_time,\n  incident_id           = j
  -> incident_id,\n  case_id               = j -> case_id,\n  alert_description  \
  \   = j -> description\n\n/* Pull arrays we’ll mine */\n| alter\n  indicators =
  j -> indicators[],\n  entities   = j -> impact_scope.entities[]\n\n/* ===== Host
  GUID + canonical host (stage-safe) ===== */\n| alter host_entities =\n    arrayfilter(entities,
  json_extract_scalar(\"@element\",\"$.entity_type\") = \"host\")\n\n| alter v1_host_guid_arr
  =\n        arraymap(host_entities, json_extract_scalar(\"@element\",\"$.entity_value.guid\"\
  )),\n       v1_host_name_arr =\n        arraymap(host_entities, json_extract_scalar(\"\
  @element\",\"$.entity_value.name\")),\n       v1_host_ip_arr   =\n        arraymap(host_entities,
  json_extract_scalar(\"@element\",\"$.entity_value.ips[0]\"))\n\n| alter v1_host_guid
  = arrayindex(v1_host_guid_arr, 0),\n       v1_host_name = arrayindex(v1_host_name_arr,
  0),\n       v1_host_ip   = replace(arrayindex(v1_host_ip_arr, 0), \"\\\"\",\"\"
  )\n\n/* ===== Related Assets (indicators preferred, entity fallback) ===== */\n
  | alter ind_host_rows =\n        arrayfilter(indicators, json_extract_scalar(\"\
  @element\",\"$.type\") = \"host\")\n\n| alter ind_related_hostnames =\n        arraymap(ind_host_rows,
  json_extract_scalar(\"@element\",\"$.value.name\")),\n       ind_related_hostips
  =\n        arraymap(ind_host_rows, json_extract_scalar(\"@element\",\"$.value.ips[0]\"\
  ))\n\n| alter ent_related_hostnames =\n        arraymap(host_entities, json_extract_scalar(\"\
  @element\",\"$.entity_value.name\")),\n       ent_related_hostips =\n        arraymap(host_entities,
  json_extract_scalar(\"@element\",\"$.entity_value.ips[0]\"))\n\n| alter related_hosts_arr
  =\n        if(array_length(ind_related_hostnames) > 0, ind_related_hostnames, ent_related_hostnames),\n\
  \       related_ips_arr   =\n        if(array_length(ind_related_hostips)    > 0,
  ind_related_hostips,    ent_related_hostips)\n\n| alter related_ind_hostnames_str
  = arraystring(related_hosts_arr, \", \"),\n       related_ind_hostips_str   = replace(arraystring(related_ips_arr,
  \", \"), \"\\\"\",\"\")\n\n/* ===== Primary vs Related assets (primary from impact_scope)
  ===== */\n| alter\n  ent_hosts = arrayfilter(entities, json_extract_scalar(\"@element\"\
  ,\"$.entity_type\") = \"host\"),\n  ent_users = arrayfilter(entities, json_extract_scalar(\"\
  @element\",\"$.entity_type\") = \"user\")\n\n| alter\n  hostnames_arr = arraymap(ent_hosts,
  json_extract_scalar(\"@element\",\"$.entity_value.name\")),\n  hostips_arr   = arraymap(ent_hosts,
  json_extract_scalar(\"@element\",\"$.entity_value.ips[0]\")),\n  hostmacs_arr  =
  arraymap(ent_hosts,\n                    coalesce(\n                      json_extract_scalar(\"\
  @element\",\"$.entity_value.mac\"),\n                      json_extract_scalar(\"\
  @element\",\"$.entity_value.mac_address\"),\n                      json_extract_scalar(\"\
  @element\",\"$.entity_value.macs[0]\"),\n                      json_extract_scalar(\"\
  @element\",\"$.entity_value.macAddresses[0]\")\n                    )\n        \
  \          ),\n  agentids_arr  = arraymap(ent_hosts,\n                    coalesce(\n\
  \                      json_extract_scalar(\"@element\",\"$.entity_value.agent_id\"\
  ),\n                      json_extract_scalar(\"@element\",\"$.entity_value.uuid\"\
  ),\n                      json_extract_scalar(\"@element\",\"$.entity_value.id\"\
  )\n                    )\n                  ),\n  usernames_arr = arraymap(ent_users,\n\
  \                    coalesce(\n                      json_extract_scalar(\"@element\"\
  ,\"$.entity_value.name\"),\n                      json_extract_scalar(\"@element\"\
  ,\"$.entity_value.username\")\n                    )\n                  ),\n  userids_arr\
  \   = arraymap(ent_users,\n                    coalesce(\n                     \
  \ json_extract_scalar(\"@element\",\"$.entity_value.id\"),\n                   \
  \   json_extract_scalar(\"@element\",\"$.entity_value.sid\"),\n                \
  \      json_extract_scalar(\"@element\",\"$.entity_value.userId\")\n           \
  \         )\n                  ),\n  userprinc_arr = arraymap(ent_users,\n     \
  \               coalesce(\n                      json_extract_scalar(\"@element\"\
  ,\"$.entity_value.principal\"),\n                      json_extract_scalar(\"@element\"\
  ,\"$.entity_value.userPrincipalName\")\n                    )\n                \
  \  )\n\n| alter\n  hostname       = arrayindex(hostnames_arr, 0),\n  local_ip  \
  \     = replace(arrayindex(hostips_arr, 0), \"\\\"\",\"\"),\n  mac_address    =
  arrayindex(hostmacs_arr, 0),\n  agent_id       = arrayindex(agentids_arr, 0),\n\
  \  user_name      = arrayindex(usernames_arr, 0),\n  user_id        = arrayindex(userids_arr,
  0),\n  user_principal = arrayindex(userprinc_arr, 0)\n\n/* ===== Remote peers ONLY
  from indicators field=peerIp ===== */\n| alter\n  indicator_ips_peer =\n    arraymap(\n\
  \      arrayfilter(indicators, json_extract_scalar(\"@element\",\"$.field\") = \"\
  peerIp\"),\n      json_extract_scalar(\"@element\",\"$.value\")\n    )\n| alter\n\
  \  peer_ip_first = arrayindex(indicator_ips_peer, 0),\n  remote_ip_str = replace(arraystring(indicator_ips_peer,
  \", \"), \"\\\"\",\"\")\n| alter remote_ips = remote_ip_str  /* alias for back-compat
  */\n\n/* ===== Indicators (process/file/urls/domains/etc.) ===== */\n| alter\n \
  \ indicator_command_lines =\n      arraymap(\n        arrayfilter(indicators, json_extract_scalar(\"\
  @element\",\"$.type\") = \"command_line\"),\n        json_extract_scalar(\"@element\"\
  ,\"$.value\")\n      ),\n  indicator_file_sha1 =\n      arraymap(\n        arrayfilter(indicators,
  json_extract_scalar(\"@element\",\"$.type\") = \"file_sha1\"),\n        json_extract_scalar(\"\
  @element\",\"$.value\")\n      ),\n  indicator_file_sha256 =\n      arraymap(\n\
  \        arrayfilter(indicators, json_extract_scalar(\"@element\",\"$.type\") =
  \"file_sha256\"),\n        json_extract_scalar(\"@element\",\"$.value\")\n     \
  \ ),\n  indicator_process_file_path =\n      arraymap(\n        arrayfilter(indicators,
  json_extract_scalar(\"@element\",\"$.field\") = \"processFilePath\"),\n        json_extract_scalar(\"\
  @element\",\"$.value\")\n      ),\n  indicator_parent_file_path =\n      arraymap(\n\
  \        arrayfilter(indicators, json_extract_scalar(\"@element\",\"$.field\") =
  \"parentFilePath\"),\n        json_extract_scalar(\"@element\",\"$.value\")\n  \
  \    ),\n  indicator_filename =\n      arraymap(\n        arrayfilter(indicators,
  json_extract_scalar(\"@element\",\"$.field\") = \"filename\"),\n        json_extract_scalar(\"\
  @element\",\"$.value\")\n      ),\n  indicator_object_file_path =\n      arraymap(\n\
  \        arrayfilter(indicators, json_extract_scalar(\"@element\",\"$.field\") =
  \"objectFilePath\"),\n        json_extract_scalar(\"@element\",\"$.value\")\n  \
  \    ),\n  indicator_ips_interested =\n      arraymap(\n        arrayfilter(indicators,
  json_extract_scalar(\"@element\",\"$.field\") = \"interestedIp\"),\n        json_extract_scalar(\"\
  @element\",\"$.value\")\n      ),\n  indicator_file_md5 =\n      arraymap(\n   \
  \     arrayfilter(indicators, json_extract_scalar(\"@element\",\"$.type\") = \"\
  file_md5\"),\n        json_extract_scalar(\"@element\",\"$.value\")\n      ),\n\
  \  indicator_domain =\n      arraymap(\n        arrayfilter(indicators, json_extract_scalar(\"\
  @element\",\"$.field\") = \"domain\"),\n        json_extract_scalar(\"@element\"\
  ,\"$.value\")\n      )\n\n/* Preferred process path and common IOC fields */\n|
  alter preferred_proc_paths = coalesce(indicator_process_file_path, indicator_object_file_path)\n
  | alter\n  md5                 = arrayindex(indicator_file_md5, 0),\n  sha1    \
  \            = arrayindex(indicator_file_sha1, 0),\n  sha256              = arrayindex(indicator_file_sha256,
  0),\n  filename            = arrayindex(indicator_filename, 0),\n  filepath    \
  \        = arrayindex(preferred_proc_paths, 0),\n  parent_process_path = arrayindex(indicator_parent_file_path,
  0),\n  cmdline             = arrayindex(indicator_command_lines, 0),\n  domain \
  \             = arrayindex(indicator_domain, 0)\n\n/* Derive a parent_process_name
  */\n| alter parent_process_name = replace(parent_process_path, \"^.*[\\\\\\\\/]\"\
  , \"\")\n\n/* Convenience/aliases for mapping & layout */\n| alter\n  severity_name\
  \       = severity,\n  ioc_value           = coalesce(sha256, sha1, md5),\n  ioc_source\
  \          = alert_provider,\n  entity_hosts =\n    arraymap(arrayfilter(entities,
  json_extract_scalar(\"@element\",\"$.entity_type\") = \"host\"),\n             json_extract_scalar(\"\
  @element\",\"$.entity_value.name\")),\n  entity_host_ips =\n    arraymap(arrayfilter(entities,
  json_extract_scalar(\"@element\",\"$.entity_type\") = \"host\"),\n             json_extract_scalar(\"\
  @element\",\"$.entity_value.ips[0]\"))\n| alter\n  entity_hosts_str    = arraystring(entity_hosts,
  \", \"),\n  entity_host_ips_str = replace(arraystring(entity_host_ips, \", \"),
  \"\\\"\",\"\"),\n  indicators_json     = to_string(indicators),\n  tim_main    \
  \        = coalesce(sha256, peer_ip_first, cmdline)\n\n/* -------- Final output
  -------- */\n| fields\n  id, schema_version, status, investigation_status, investigation_result,\n\
  \  workbench_link, alert_provider, alert_name, model_type, score, severity, severity_name,\n\
  \  created_date_time_raw, updated_date_time_raw, incident_id, case_id, alert_description,\n\
  \  hostname, local_ip, mac_address, agent_id, user_name, user_id, user_principal,\n\
  \  filename, filepath, parent_process_path, parent_process_name, cmdline,\n  md5,
  sha1, sha256, ioc_value, ioc_source, remote_ip_str, remote_ips, domain,\n  indicator_command_lines,
  indicator_file_sha1, indicator_file_sha256,\n  indicator_process_file_path, indicator_parent_file_path,
  indicator_object_file_path,\n  indicator_ips_interested, indicator_ips_peer, indicator_filename,\n\
  \  entity_hosts_str, entity_host_ips_str, j,\n  related_ind_hostnames_str, related_ind_hostips_str,
  indicators_json, tim_main,\n  mitre_tactic, mitre_ids_str, mitre_ids_short_str,
  mitre_primary, mitre_primary_short, mitre_count,\n  v1_host_guid, v1_host_name,
  v1_host_ip\n"
